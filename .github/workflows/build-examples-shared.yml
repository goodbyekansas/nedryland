name: Build Examples

on:
  workflow_call:
    secrets:
      nix-access-key:
        description: SSH key to use for accessing repositories through nix.
        required: true
    inputs:
      build-platform:
        description: "The nix platform to run the build on, available options are x86_64-linux (default) and x86_64-darwin."
        default: x86_64-linux
        type: string

jobs:
  build-hello:
    name: Hello
    uses: ./.github/workflows/build-components.yml
    secrets:
      nix-access-key: ${{ secrets.nix-access-key }}
    with:
      root: examples/hello
      nix-build-locally: ${{ inputs.build-platform != 'x86_64-linux' }}
      build-platform: ${{ inputs.build-platform }}
      nix-builders: ${{ inputs.build-platform == 'x86_64-linux' && 'build@nix-builders.goodbyekansas.com' || '' }}
      nix-config-path: ./.github/workflows/setup/nix.conf
      nix-version: 2.11.1

  build-documentation:
    name: Documentation
    uses: ./.github/workflows/build-components.yml
    secrets:
      nix-access-key: ${{ secrets.nix-access-key }}
    with:
      root: examples/documentation
      nix-build-locally: ${{ inputs.build-platform != 'x86_64-linux' }}
      build-platform: ${{ inputs.build-platform }}
      nix-builders: ${{ inputs.build-platform == 'x86_64-linux' && 'build@nix-builders.goodbyekansas.com' || '' }}
      nix-config-path: ./.github/workflows/setup/nix.conf
      nix-version: 2.11.1

  build-dependencies:
    name: Dependencies
    uses: ./.github/workflows/build-components.yml
    secrets:
      nix-access-key: ${{ secrets.nix-access-key }}
    with:
      root: examples/dependencies/child
      nix-build-locally: ${{ inputs.build-platform != 'x86_64-linux' }}
      build-platform: ${{ inputs.build-platform }}
      nix-builders: ${{ inputs.build-platform == 'x86_64-linux' && 'build@nix-builders.goodbyekansas.com' || '' }}
      nix-config-path: ./.github/workflows/setup/nix.conf
      nix-version: 2.11.1

  all-examples:
    name: All Examples ðŸ‘»
    runs-on: ubuntu-latest
    needs: [build-hello, build-documentation, build-dependencies]
    if: always()
    steps:
      - name: Successful Examples Build
        if: ${{ !(contains(needs.*.result, 'failure')) && !(contains(needs.*.result, 'cancelled')) }}
        run: exit 0
      - name: Failing Examples Build
        if: ${{ contains(needs.*.result, 'failure') || contains(needs.*.result, 'cancelled') }}
        run: exit 1
